{"version":3,"sources":["hoc/withAuthRedirect.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/common/FormsControls/FormsControls.js","components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/user.png","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileData/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileData/ProfileData.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddNewPostForm.js","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["__webpack_require__","d","__webpack_exports__","withAuthRedirect","react_router_dom__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","react_redux__WEBPACK_IMPORTED_MODULE_2__","mapStateToPropsForRedirect","state","isAuth","auth","Component","connect","props","a","createElement","to","module","exports","formControl","error","formSummaryError","required","maxLengthCreator","value","maxLength","length","concat","Element","_ref","input","meta","Object","_Users_admin_Downloads_Work_IT_KAMASUTRA_way_of_samurai_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","hasError","touched","className","styles","_Element","assign","descriptionBlock","userAvatar","contact","p","postsBlock","posts","item","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","err","_iterableToArrayLimit","TypeError","_nonIterableRest","ProfileStatusWithHooks","_useState2","useState","status","setStatus","_useState4","editMode","setEditMode","useEffect","react_default","onDoubleClick","onBlur","updateStatus","autoFocus","onChange","event","target","Input","Textarea","maxLength15","maxLength30","ProfileDataReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","name","validate","type","keys","profile","contacts","map","key","s","placeholder","ProfileData","isOwner","onClick","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileData_Contact","contactTitle","contactValue","Contact","ProfileInfo","Preloader","src","photos","large","userPhoto","e","files","savePhoto","initialValues","data","saveProfile","then","ProfileData_ProfileData","ProfileInfo_ProfileStatusWithHooks","Post","message","likesCount","maxLength10","MyPosts","postsElements","MyPosts_Post_Post","text","id","MyPosts_AddNewPostForm","values","newPost","newPostBody","addPost","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","compose","authorizedUserId","getProfile","getStatus","withRouter","userId","match","params","history","components_Profile_Profile"],"mappings":"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","file":"static/js/2.6b6bc9a4.chunk.js","sourcesContent":["import {Redirect, Route} from \"react-router-dom\";\nimport React from 'react'\nimport {connect} from \"react-redux\";\n\nconst mapStateToPropsForRedirect = state => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n\n    function RedirectComponent(props) {\n        if (!props.isAuth) {\n            return <Redirect to={'/login'}/>\n        }\n        return <Component {...props}/>\n    }\n\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2aUOv\",\"error\":\"FormsControls_error__2kvuB\",\"formSummaryError\":\"FormsControls_formSummaryError__T7Hzf\"};","export const required = (value) => {\n    if (value) return undefined\n    return 'Field is required'\n}\n\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\n\n    return undefined\n}\n\n\n\n","import React from 'react'\nimport styles from './FormsControls.module.css'\n\n\nconst Element = Element => ({ input, meta, ...props }) => {\n\n    const hasError = meta.touched && meta.error;\n\n    return (\n        <div className={ styles.formControl + \" \" + (hasError ? styles.error : \"\") }>\n            <Element {...input} {...props} />\n            { hasError && <span> { meta.error } </span> }\n        </div>\n    );\n};\n\nexport default Element\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__26a_G\",\"userAvatar\":\"ProfileInfo_userAvatar__1TN9_\",\"contact\":\"ProfileInfo_contact__1YEAg\"};","module.exports = __webpack_public_path__ + \"static/media/user.c7b5f6a0.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__e1oxb\",\"posts\":\"MyPosts_posts__Cp_N3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3YHrq\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, {useEffect, useState} from 'react';\n\n\nconst ProfileStatusWithHooks = (props) => {\n\n    const [status, setStatus] = useState(props.status)\n    const [editMode, setEditMode] = useState(false)\n\n    useEffect( () => {\n        setStatus(props.status)\n    } , [props.status])\n\n    const activateMode = () => {\n        setEditMode(true)\n    }\n\n    const deactivateMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n\n    const onStatusChange = (event) => {\n        setStatus(event.target.value)\n    }\n\n    return (\n        <div>\n            {!editMode && <div>\n                <b>Status: </b>  <span onDoubleClick={activateMode}>{props.status || '––––––'}</span>\n            </div>\n            }\n            {editMode && <div>\n                <b>Status: </b> <input onBlur={deactivateMode} value={status} autoFocus={true} onChange={onStatusChange}/>\n            </div>\n            }\n        </div>\n    )\n}\n\nexport default ProfileStatusWithHooks;","import React from \"react\";\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validators\";\nimport {Field, reduxForm} from \"redux-form\";\nimport Element from \"../../../common/FormsControls/FormsControls\";\nimport s from \"../ProfileInfo.module.css\";\nimport styles from \"../../../common/FormsControls/FormsControls.module.css\";\n\n\nconst Input = Element(\"input\");\nconst Textarea = Element(\"textarea\");\nconst maxLength15 = maxLengthCreator(15)\nconst maxLength30 = maxLengthCreator(30)\n\nconst ProfileDataForm = (props) => {\n    return <form onSubmit={props.handleSubmit}>\n\n        {<button>Save</button>}\n\n        {props.error && <div className={styles.formSummaryError}>\n            {props.error}\n        </div>}\n\n        <div>\n            <b>Name</b>: <Field component={Input}\n                                name='fullName'\n                                validate={[required, maxLength15]}/>\n        </div>\n        <div>\n            <b>Looking for a job</b>: <Field component={Input}\n                                             name='lookingForAJob'\n                                             type='checkbox'/>\n        </div>\n\n        <div>\n            <b>Professional skills</b>: <Field component={Textarea}\n                                               name='lookingForAJobDescription'\n                                               validate={[required, maxLength30]}/>\n        </div>\n\n        <div>\n            <b>About me</b>: <Field component={Textarea}\n                                    name='aboutMe'\n                                    validate={[required, maxLength30]}/>\n        </div>\n        <div>\n            <b>Contacts</b>: {Object.keys(props.profile.contacts).map(key => {\n            return <div className={s.contact}>\n                <b>{key}</b> <Field key={key}\n                                    component={Input}\n                                    placeholder={key}\n                                    name={`contacts.${key}`}/>\n            </div>\n        })}\n        </div>\n    </form>\n}\n\nexport const ProfileDataReduxForm = reduxForm(\n    {\n        form: 'profileDataForm'\n    }\n)(ProfileDataForm)\n\n","import React from \"react\";\nimport s from \"../ProfileInfo.module.css\";\n\nexport const ProfileData = (props) => {\n    return (<div>\n            {props.isOwner && <button onClick={props.goToEditMode}>Edit</button>}\n            <div>\n                <b> Name </b>: {props.profile.fullName}\n            </div>\n\n            <div>\n                <b> Looking for a job</b>: {props.profile.lookingForAJob ? \"Yes\" : 'No'}\n            </div>\n\n            <div>\n                <b>Professional skills</b>: {props.profile.lookingForAJobDescription}\n            </div>\n\n            <div>\n                <b>About me</b>: {props.profile.aboutMe}\n            </div>\n\n\n            <div>\n                <b>Contacts: </b> {Object.keys(props.profile.contacts).map(key => {\n                if (props.profile.contacts[key]) {\n                return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\n                }\n\n            })}\n            </div>\n        </div>\n    )\n}\n\nconst Contact = ({contactTitle, contactValue}) => {\n    return <div className={s.contact}>\n        <b> {contactTitle}: </b> {contactValue}\n    </div>\n}","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from '../../../assets/images/user.png'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport {ProfileDataReduxForm} from \"./ProfileData/ProfileDataForm\";\r\nimport {ProfileData} from \"./ProfileData/ProfileData\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (data) => {\r\n        props.saveProfile(data).then(\r\n            () => {\r\n                setEditMode(false)\r\n            })\r\n    }\r\n\r\n    return <div className={s.descriptionBlock}>\r\n\r\n        <div>\r\n            <img className={s.userAvatar}\r\n                 src={props.profile.photos.large || userPhoto}/>\r\n\r\n            {props.isOwner && <input type=\"file\" onChange={onMainPhotoSelected}/>}\r\n        </div>\r\n\r\n        {editMode\r\n            ? <ProfileDataReduxForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit}/>\r\n            : <ProfileData profile={props.profile}\r\n                           isOwner={props.isOwner}\r\n                           goToEditMode={() => setEditMode(true)}/>}\r\n\r\n        <div>\r\n            <ProfileStatusWithHooks status={props.status}\r\n                                    updateStatus={props.updateStatus}/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://w7.pngwing.com/pngs/39/283/png-transparent-user-user-people-linear-icon-user-infographic-people-monochrome-thumbnail.png' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\nimport Element from \"../../common/FormsControls/FormsControls\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\n\nconst Textarea = Element(\"textarea\");\n\nconst maxLength10 = maxLengthCreator(10)\n\nconst AddNewPostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field component={Textarea}\n                   name='newPostBody'\n                   placeholder={'post message'}\n                   validate={[required, maxLength10]}/>\n            <button>Add post</button>\n        </form>\n    )\n}\n\nexport default reduxForm({form: 'profileAddNewPostForm'})(AddNewPostForm)\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport AddNewPostForm from \"./AddNewPostForm\";\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n\r\n    const postsElements = props.posts\r\n        .map(p => <Post message={p.text} key={p.id} likesCount={p.likesCount}/>)\r\n\r\n    const onAddPost = (values) => {\r\n        const newPost = values.newPostBody\r\n        props.addPost(newPost)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3> My posts </h3>\r\n\r\n            <AddNewPostForm onSubmit={onAddPost}/>\r\n\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostBody) => {\r\n            dispatch(addPostActionCreator(newPostBody))\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n                         isOwner={props.isOwner}\r\n                         savePhoto={props.savePhoto}\r\n                         saveProfile={props.saveProfile}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React, {useEffect} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, savePhoto, saveProfile, updateStatus} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nconst ProfileContainer = (props) => {\r\n\r\n    useEffect( () => {\r\n        let userId = props.match.params.userId\r\n\r\n        if (!userId) {\r\n            userId = props.authorizedUserId;\r\n            if (!userId) {\r\n                props.history.push('/login')\r\n            }\r\n        }\r\n\r\n        props.getProfile(userId)\r\n        props.getStatus(userId)\r\n    }, [])\r\n\r\n    return (\r\n        <Profile profile={props.profile}\r\n                 status={props.status}\r\n                 updateStatus={props.updateStatus}\r\n                 isOwner={!props.match.params.userId}\r\n                 savePhoto={props.savePhoto}\r\n                 saveProfile={props.saveProfile}\r\n        />\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.id,\r\n        isAuth: state.auth.isAuth,\r\n    })\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            getProfile,\r\n            getStatus,\r\n            updateStatus,\r\n            savePhoto,\r\n            saveProfile\r\n        }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}