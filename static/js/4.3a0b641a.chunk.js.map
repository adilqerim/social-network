{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialogItems","activeLink","messages","dialogItem","formControl","error","formSummaryError","Element","_ref","input","meta","props","Object","_Users_admin_Downloads_Work_IT_KAMASUTRA_way_of_samurai_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","hasError","touched","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","styles","_Element","assign","__webpack_require__","d","__webpack_exports__","required","maxLengthCreator","value","maxLength","length","concat","DialogItem","path","id","react_default","s","src","react_router_dom","to","activeClassName","name","Message","message","text","maxLength100","Textarea","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","validate","Dialogs","dialogsPage","dialogsElements","map","Dialogs_DialogItem_DialogItem","key","messagesElements","m","Dialogs_Message_Message","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","dispatch","addMessageActionCreator","Component","react_router"],"mappings":"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","file":"static/js/4.3a0b641a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3aOmD\",\"dialogItems\":\"Dialogs_dialogItems__3b2YZ\",\"activeLink\":\"Dialogs_activeLink__F_XU3\",\"messages\":\"Dialogs_messages__3AO0D\",\"dialogItem\":\"Dialogs_dialogItem__Wfkyz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2aUOv\",\"error\":\"FormsControls_error__2kvuB\",\"formSummaryError\":\"FormsControls_formSummaryError__T7Hzf\"};","import React from 'react'\nimport styles from './FormsControls.module.css'\n\n\nconst Element = Element => ({ input, meta, ...props }) => {\n    const hasError = meta.touched && meta.error;\n    return (\n        <div className={ styles.formControl + \" \" + (hasError ? styles.error : \"\") }>\n            <Element {...input} {...props} />\n            { hasError && <span> { meta.error } </span> }\n        </div>\n    );\n};\n\nexport default Element\n\n","export const required = (value) => {\n    if (value) return undefined\n    return 'Field is required'\n}\n\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\n\n    return undefined\n}\n\n\n\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport s from '../Dialogs.module.css';\n\nconst DialogItem = (props) => {\n\n    let path = '/dialogs/' + props.id\n\n    return (\n        <div className={s.dialogItem}>\n            <img src='https://images.unsplash.com/photo-1562860149-691401a306f8?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=2468&q=80'/>\n            <NavLink to={ path } activeClassName={s.activeLink}> {props.name} </NavLink>\n        </div>\n    )\n}\n\n\nexport default DialogItem;","import React from 'react'\nimport s from '../Dialogs.module.css'\n\n\nconst Message = (props) => {\n    return (\n        <div className={s.message}>{ props.text }</div>\n    )\n}\n\n\nexport default Message;","import React from 'react'\nimport s from './Dialogs.module.css'\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\nimport Element from \"../common/FormsControls/FormsControls\";\n\n\nconst maxLength100 = maxLengthCreator(100)\n\nconst Dialogs = (props) => {\n    const dialogsPage = props.dialogsPage\n\n    const dialogsElements = dialogsPage.dialogs\n        .map(d => <DialogItem id={d.id} key={d.id} name={d.name}/>)\n    const messagesElements = dialogsPage.messages\n        .map(m => <Message key={m.id} text={m.text}/>)\n\n    const addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody)\n    }\n\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                {messagesElements}\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\n            </div>\n\n        </div>\n    )\n}\n\nconst Textarea = Element(\"textarea\");\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field component={Textarea}\n                   name='newMessageBody'\n                   placeholder='Enter your message'\n                   validate={[required, maxLength100]}/>\n            <button>Send message</button>\n        </form>\n    )\n}\n\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\n\nexport default Dialogs;","import {Redirect} from \"react-router-dom\";\nimport React from 'react'\nimport {connect} from \"react-redux\";\n\nconst mapStateToPropsForRedirect = state => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n\n    function RedirectComponent(props) {\n        if (!props.isAuth) {\n            return <Redirect to={'/login'}/>\n        }\n        return <Component {...props}/>\n    }\n\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n}","import {addMessageActionCreator} from \"../../redux/dialogsReducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport React from 'react'\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nconst mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) => {\n            dispatch(addMessageActionCreator(newMessageBody))\n        },\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs)\n\n\n\n\n"],"sourceRoot":""}