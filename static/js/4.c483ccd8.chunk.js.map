{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/common/FormsControls/FormsControls.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["__webpack_require__","d","__webpack_exports__","withAuthRedirect","react_router_dom__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","react_redux__WEBPACK_IMPORTED_MODULE_2__","mapStateToPropsForRedirect","state","isAuth","auth","Component","connect","props","a","createElement","to","module","exports","dialogs","dialogItems","activeLink","messages","dialogItem","formControl","error","formSummaryError","required","maxLengthCreator","value","maxLength","length","concat","Element","_ref","input","meta","Object","_Users_admin_Downloads_Work_IT_KAMASUTRA_way_of_samurai_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","hasError","touched","className","styles","_Element","assign","DialogItem","path","id","react_default","s","src","react_router_dom","activeClassName","name","Message","message","text","maxLength100","Textarea","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","validate","Dialogs","dialogsPage","dialogsElements","map","Dialogs_DialogItem_DialogItem","key","messagesElements","m","Dialogs_Message_Message","values","sendMessage","newMessageBody","compose","dispatch","addMessageActionCreator"],"mappings":"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","file":"static/js/4.c483ccd8.chunk.js","sourcesContent":["import {Redirect, Route} from \"react-router-dom\";\nimport React from 'react'\nimport {connect} from \"react-redux\";\n\nconst mapStateToPropsForRedirect = state => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n\n    function RedirectComponent(props) {\n        if (!props.isAuth) {\n            return <Redirect to={'/login'}/>\n        }\n        return <Component {...props}/>\n    }\n\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3aOmD\",\"dialogItems\":\"Dialogs_dialogItems__3b2YZ\",\"activeLink\":\"Dialogs_activeLink__F_XU3\",\"messages\":\"Dialogs_messages__3AO0D\",\"dialogItem\":\"Dialogs_dialogItem__Wfkyz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2aUOv\",\"error\":\"FormsControls_error__2kvuB\",\"formSummaryError\":\"FormsControls_formSummaryError__T7Hzf\"};","export const required = (value) => {\n    if (value) return undefined\n    return 'Field is required'\n}\n\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\n\n    return undefined\n}\n\n\n\n","import React from 'react'\nimport styles from './FormsControls.module.css'\n\n\nconst Element = Element => ({ input, meta, ...props }) => {\n\n    const hasError = meta.touched && meta.error;\n\n    return (\n        <div className={ styles.formControl + \" \" + (hasError ? styles.error : \"\") }>\n            <Element {...input} {...props} />\n            { hasError && <span> { meta.error } </span> }\n        </div>\n    );\n};\n\nexport default Element\n\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport s from '../Dialogs.module.css';\n\nconst DialogItem = (props) => {\n\n    let path = '/dialogs/' + props.id\n\n    return (\n        <div className={s.dialogItem}>\n            <img src='https://images.unsplash.com/photo-1562860149-691401a306f8?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=2468&q=80'/>\n            <NavLink to={ path } activeClassName={s.activeLink}> {props.name} </NavLink>\n        </div>\n    )\n}\n\n\nexport default DialogItem;","import React from 'react'\nimport s from '../Dialogs.module.css'\n\n\nconst Message = (props) => {\n    return (\n        <div className={s.message}>{ props.text }</div>\n    )\n}\n\n\nexport default Message;","import React from 'react'\nimport s from './Dialogs.module.css'\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\nimport Element from \"../common/FormsControls/FormsControls\";\n\n\nconst maxLength100 = maxLengthCreator(100)\n\nconst Dialogs = (props) => {\n    const dialogsPage = props.dialogsPage\n\n    const dialogsElements = dialogsPage.dialogs\n        .map(d => <DialogItem id={d.id} key={d.id} name={d.name}/>)\n    const messagesElements = dialogsPage.messages\n        .map(m => <Message key={m.id} text={m.text}/>)\n\n    const addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody)\n    }\n\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                {messagesElements}\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\n            </div>\n\n        </div>\n    )\n}\n\nconst Textarea = Element(\"textarea\");\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field component={Textarea}\n                   name='newMessageBody'\n                   placeholder='Enter your message'\n                   validate={[required, maxLength100]}/>\n            <button>Send message</button>\n        </form>\n    )\n}\n\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\n\nexport default Dialogs;","import {addMessageActionCreator} from \"../../redux/dialogsReducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport React from 'react'\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nconst mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) => {\n            dispatch(addMessageActionCreator(newMessageBody))\n        },\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs)\n\n\n\n\n"],"sourceRoot":""}